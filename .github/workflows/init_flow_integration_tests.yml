name: Run init flow integration tests

on:
  push:
    tags:
      - "v*.*.*"
    branches:
      - main
      - test-init-flow-integration-tests*

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    working-directory: codegenerator/integration_tests

jobs:
  # NOTE: if you find this workflow too slow for you liking you can try parallelizing the integration tests as was done previously here: https://github.com/Float-Capital/indexer/blob/22be43f25ef45ba42eb60f0d563542e3bc7a4d4c/.github/workflows/release.yml#L296-L373
  #          Some challenges with parellelising is that this requires a built 'envio' binary first to work - so that would need to be built in an initial/previous step.
  template-integration-test:
    name: integration-tests
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: "18.16.0"
          registry-url: "https://registry.npmjs.org"

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      # TBH it is unclear if this rust cache speeds things up - super slow with it even.
      - name: Setup rust cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/git
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            # using both of these paths to hedge bets on which is correct.
            ./codegenerator/target
            ./target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            ${{ runner.os }}-cargo-

      - name: Get pnpm store directory (if this seems stable and static we can hard-code it again) # Source: https://github.com/pnpm/action-setup#use-cache-to-reduce-installation-time
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
            ${{ runner.os }}-pnpm-store-

      # TODO see if there is a way to speed this up via caching etc
      - name: Pre-pull docker-compose images
        run: |
          cd ../cli/templates/static/codegen # we use the docker-compose.yml in the static folder
          docker-compose pull

      - name: Mock gio
        run: |
          mkdir -p /home/runner/.local/bin # This is on the path by default
          echo 'echo "running mock gio"' > /home/runner/.local/bin/gio && chmod +x /home/runner/.local/bin/gio
          echo 'echo "running mock xdg-open"' > /home/runner/.local/bin/xdg-open && chmod +x /home/runner/.local/bin/xdg-open

      - name: Run the integration tests
        env:
          LOG_LEVEL: trace
        run: ./tests/runAll.sh

      - name: Test Failure
        uses: rjstone/discord-webhook-notify@v1
        if: failure()
        with:
          severity: error
          details: "Integration test Failed - in main (make sure to fix before releasing a new version)! (CC: <@&Devs> )"
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Test Cancelled
        uses: rjstone/discord-webhook-notify@v1
        if: cancelled()
        with:
          severity: warn
          details: Integration Test Cancelled - make sure the cancelation was intentional
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
