{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Envio Config Schema",
  "description": "Schema for a YAML config for an envio indexer",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "version": {
      "description": "Version of the config schema used by the indexer",
      "type": "string"
    },
    "description": {
      "description": "Description of the project",
      "type": "string"
    },
    "repository": {
      "description": "Repository of the project",
      "type": "string"
    },
    "networks": {
      "description": "Configuration of the blockchain networks that the project is deployed on",
      "type": "array",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "description": "Chain identifier of the network",
            "type": "integer"
          },
          "rpc_config": {
            "description": "RPC configuration will be used to subscribe to blockchain data on this network",
            "type": "array",
            "items":{
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "url": {
                  "description": "URL of the RPC endpoint",
                  "type": "string"
                },
                "sync_config":{
                  "description": "Sync configuration that will used to configure the RPC request",
                  "type": "array",
                  "items":{
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "initial_block_interval": {
                        "description": "Initial block interval which the indexer will use to make RPC requests",
                        "type": "integer"
                      },
                      "backoff_multiplicative": {
                        "description": "After an RPC error, how much to scale back the number of blocks requested at once",
                        "type": "integer"
                      },
                      "acceleration_additive": {
                        "description": "Without RPC errors or timeouts, how much to increase the number of blocks requested by for the next batch",
                        "type": "integer"
                      },
                      "interval_ceiling": {
                        "description": "Do not further increase the block interval past this limit",
                        "type": "integer"
                      },
                      "backoff_millis": {
                        "description": "After an error, how long to wait before retrying",
                        "type": "integer"
                      },
                      "query_timeout_millis": {
                        "description": "How long to wait before cancelling an RPC request",
                        "type": "integer"
                      }
                    }
                  }    
                }
              }
            }
          },
          "start_block": {
            "description": "Initial block from which the indexer will start listening for events",
            "type": "integer"
          },
          "contracts": {
            "description": "Configuration for each contract deployed on the network",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "description": "User-defined contract name",
                  "type": "string"
                },
                "abi_file_path": {
                  "description": "File location of the contract ABI",
                  "type": "string"
                },
                "address": {
                  "description": "An address, or array of addresses, that the contract is deployed to on the network",
                  "oneOf": [
                    {
                      "type": "string",
                      "pattern": "^0x[a-fA-F0-9]{40}$"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "pattern": "^0x[a-fA-F0-9]{40}$"
                      }
                    }
                  ]
                },
                "handler": {
                  "description": "Location of the file that handles the events emitted by this contract",
                  "type": "string"
                },
                "events": {
                  "description": "Configuration for each event emitted by this contract that the indexer will listen for",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "event": {
                        "description": "Name of the event (which must match the name in the ABI) or the signature of the event",
                        "type": "string"
                      },
                      "requiredEntities": {
                        "description": "An array of entities that need to loaded and made accessible within the handler function (an empty array indicates that no entities are required)",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "description": "The name of the required entity (must match an entity defined in `schema.graphql`)",
                              "type": "string"
                            },
                            "labels": {
                              "description": "A user defined label that corresponds to this entity load",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": ["name"]
                        }
                      }
                    },
                    "required": ["name"]
                  }
                }
              },
              "required": [
                "name",
                "abi_file_path",
                "address",
                "handler",
                "events"
              ]
            }
          }
        },
        "required": ["id", "rpc_url", "start_block", "contracts"]
      }
    }
  },
  "required": ["version", "description", "repository", "networks"]
}
