// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Logs = require("generated/src/Logs.bs.js");
var Curry = require("rescript/lib/js/curry.js");
var Ethers = require("generated/src/bindings/Ethers.bs.js");
var Handlers = require("generated/src/Handlers.bs.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Caml_exceptions = require("rescript/lib/js/caml_exceptions.js");

Curry._1(Handlers.GravatarContract.NewGravatar.loader, (function ($$event, context) {
        
      }));

Curry._1(Handlers.GravatarContract.NewGravatar.handler, (function ($$event, context) {
        Curry._1(context.gravatar.set, {
              id: $$event.params.id.toString(),
              owner: Ethers.ethAddressToString($$event.params.owner),
              displayName: $$event.params.displayName,
              imageUrl: $$event.params.imageUrl,
              updatesCount: BigInt(1)
            });
      }));

Curry._1(Handlers.GravatarContract.UpdatedGravatar.loader, (function ($$event, context) {
        Curry._2(context.gravatar.gravatarWithChangesLoad, $$event.params.id.toString(), {
              loadOwner: {}
            });
      }));

Curry._1(Handlers.GravatarContract.UpdatedGravatar.handler, (function ($$event, context) {
        Curry._1(context.log.debug, "We are processing the event, " + $$event.blockHash + " (debug)");
        Curry._1(context.log.info, "We are processing the event, " + $$event.blockHash + " (info)");
        Curry._1(context.log.warn, "We are processing the event, " + $$event.blockHash + " (warn)");
        Curry._1(context.log.error, "We are processing the event, " + $$event.blockHash + " (error)");
        Logs.debug(context.log, {
              msg: "We are processing the event",
              type: "debug",
              data: {
                blockHash: $$event.blockHash
              }
            });
        Logs.info(context.log, {
              msg: "We are processing the event",
              type: "info",
              data: {
                blockHash: $$event.blockHash
              }
            });
        Logs.warn(context.log, {
              msg: "We are processing the event",
              type: "warn",
              data: {
                blockHash: $$event.blockHash
              }
            });
        Logs.error(context.log, {
              msg: "We are processing the event",
              type: "error",
              data: {
                blockHash: $$event.blockHash
              }
            });
        var ExmapleException = /* @__PURE__ */Caml_exceptions.create("ExmapleException");
        Logs.errorWithExn(context.log, {
              RE_EXN_ID: ExmapleException,
              _1: "some error processing the event"
            }, {
              msg: "We are processing the event",
              type: "error",
              data: {
                blockHash: $$event.blockHash
              }
            });
        var updatesCount = Belt_Option.mapWithDefault(Curry._1(context.gravatar.gravatarWithChanges, undefined), BigInt(1), (function (gravatar) {
                return Ethers.$$BigInt.add(gravatar.updatesCount, BigInt(1));
              }));
        Curry._1(context.gravatar.set, {
              id: $$event.params.id.toString(),
              owner: Ethers.ethAddressToString($$event.params.owner),
              displayName: $$event.params.displayName,
              imageUrl: $$event.params.imageUrl,
              updatesCount: updatesCount
            });
      }));

/*  Not a pure module */
