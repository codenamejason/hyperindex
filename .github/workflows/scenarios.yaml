# Starting pipeline - all in one for now

name: Indexer test
on:
  workflow_run:
    worklows:
      - rust
    types:
      - completed

jobs:
  # Label of the container job
  container-job:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:13
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: testing
          POSTGRES_DB: envio-dev
          POSTGRES_USER: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
            ~/.cargo/registry
            ~/.cargo/git
            codegenerator/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: gravatar build, test & bench
        run: |
          cd scenarios/gravatar
          pnpm codegen
          pnpm install
          pnpm build
          pnpm test
          pnpm bench
  on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'The triggering workflow failed'
