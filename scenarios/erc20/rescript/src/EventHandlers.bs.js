// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var Ethers = require("generated/src/bindings/Ethers.bs.js");
var Handlers = require("generated/src/Handlers.bs.js");

Handlers.ERC20Contract.registerApprovalLoadEntities(function ($$event, context) {
      Curry._1(context.account.ownerAccountChangesLoad, Ethers.ethAddressToString($$event.params.owner));
    });

Handlers.ERC20Contract.registerApprovalHandler(function ($$event, context) {
      var ownerAccount = Curry._1(context.account.ownerAccountChanges, undefined);
      if (ownerAccount !== undefined) {
        return Curry._1(context.account.update, {
                    id: ownerAccount.id,
                    approval: $$event.params.value,
                    balance: ownerAccount.balance
                  });
      } else {
        return Curry._1(context.account.insert, {
                    id: Ethers.ethAddressToString($$event.params.owner),
                    approval: $$event.params.value,
                    balance: BigInt(0)
                  });
      }
    });

Handlers.ERC20Contract.registerTransferLoadEntities(function ($$event, context) {
      Curry._1(context.account.senderAccountChangesLoad, Ethers.ethAddressToString($$event.params.from));
      Curry._1(context.account.receiverAccountChangesLoad, Ethers.ethAddressToString($$event.params.to));
    });

Handlers.ERC20Contract.registerTransferHandler(function ($$event, context) {
      var senderAccount = Curry._1(context.account.senderAccountChanges, undefined);
      if (senderAccount !== undefined) {
        Curry._1(context.account.update, {
              id: senderAccount.id,
              approval: senderAccount.approval,
              balance: Ethers.$$BigInt.sub(senderAccount.balance, $$event.params.value)
            });
      } else {
        Curry._1(context.account.insert, {
              id: Ethers.ethAddressToString($$event.params.from),
              approval: BigInt(0),
              balance: Ethers.$$BigInt.sub(BigInt(0), $$event.params.value)
            });
      }
      var receiverAccount = Curry._1(context.account.receiverAccountChanges, undefined);
      if (receiverAccount !== undefined) {
        return Curry._1(context.account.update, {
                    id: receiverAccount.id,
                    approval: receiverAccount.approval,
                    balance: Ethers.$$BigInt.add(receiverAccount.balance, $$event.params.value)
                  });
      } else {
        return Curry._1(context.account.insert, {
                    id: Ethers.ethAddressToString($$event.params.to),
                    approval: BigInt(0),
                    balance: $$event.params.value
                  });
      }
    });

/*  Not a pure module */
