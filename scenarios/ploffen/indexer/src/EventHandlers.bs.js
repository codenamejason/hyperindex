// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("rescript/lib/js/array.js");
var Curry = require("rescript/lib/js/curry.js");
var Ethers = require("generated/src/bindings/Ethers.bs.js");
var Handlers = require("generated/src/Handlers.bs.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");

Handlers.PloffenContract.registerCreatePloffenLoadEntities(function ($$event, context) {
      
    });

Handlers.PloffenContract.registerCreatePloffenHandler(function ($$event, context) {
      Curry._1(context.ploffengame.insert, {
            id: "MASTER_GAME",
            gameToken: Ethers.ethAddressToString($$event.params.tokenGameAddress),
            seedAmount: BigInt(0),
            gameStartTime: 0,
            possibleGameWinTime: 0,
            possibleWinner: undefined,
            winner: undefined,
            status: "Created",
            totalPot: BigInt(0),
            users: undefined
          });
    });

Handlers.PloffenContract.registerStartPloffenLoadEntities(function ($$event, context) {
      Curry._1(context.ploffengame.unstartedPloffenLoad, "MASTER_GAME");
    });

Handlers.PloffenContract.registerStartPloffenHandler(function ($$event, context) {
      var unstartedPloffen = Curry._1(context.ploffengame.unstartedPloffen, undefined);
      if (unstartedPloffen !== undefined) {
        return Curry._1(context.ploffengame.insert, {
                    id: unstartedPloffen.id,
                    gameToken: unstartedPloffen.gameToken,
                    seedAmount: $$event.params.seedAmount,
                    gameStartTime: $$event.blockTimestamp,
                    possibleGameWinTime: unstartedPloffen.possibleGameWinTime,
                    possibleWinner: unstartedPloffen.possibleWinner,
                    winner: unstartedPloffen.winner,
                    status: "Started",
                    totalPot: $$event.params.seedAmount,
                    users: unstartedPloffen.users
                  });
      } else {
        console.log("trying to start a ploffen that doens't exist");
        return ;
      }
    });

Handlers.PloffenContract.registerPlayPloffenLoadEntities(function ($$event, context) {
      Curry._1(context.ploffengame.startedPloffenLoad, "MASTER_GAME");
      Curry._1(context.user.userLoad, Ethers.ethAddressToString($$event.params.player));
    });

Handlers.PloffenContract.registerPlayPloffenHandler(function ($$event, context) {
      var ploffenMaster = Curry._1(context.ploffengame.startedPloffen, undefined);
      var loadedUser = Curry._1(context.user.user, undefined);
      if (ploffenMaster !== undefined) {
        if (loadedUser !== undefined) {
          var userObject_id = loadedUser.id;
          var userObject_userAddress = loadedUser.userAddress;
          var userObject_numberOfTimesPlayed = loadedUser.numberOfTimesPlayed + 1 | 0;
          var userObject_totalContributed = Ethers.$$BigInt.add(loadedUser.totalContributed, $$event.params.amount);
          var userObject = {
            id: userObject_id,
            userAddress: userObject_userAddress,
            numberOfTimesPlayed: userObject_numberOfTimesPlayed,
            totalContributed: userObject_totalContributed
          };
          Curry._1(context.user.insert, userObject);
          return Curry._1(context.ploffengame.insert, {
                      id: ploffenMaster.id,
                      gameToken: ploffenMaster.gameToken,
                      seedAmount: ploffenMaster.seedAmount,
                      gameStartTime: ploffenMaster.gameStartTime,
                      possibleGameWinTime: $$event.blockTimestamp + 3600 | 0,
                      possibleWinner: loadedUser.id,
                      winner: ploffenMaster.winner,
                      status: ploffenMaster.status,
                      totalPot: Ethers.$$BigInt.add(ploffenMaster.totalPot, $$event.params.amount),
                      users: ploffenMaster.users
                    });
        }
        var userObject_id$1 = Ethers.ethAddressToString($$event.params.player);
        var userObject_userAddress$1 = Ethers.ethAddressToString($$event.params.player);
        var userObject_totalContributed$1 = $$event.params.amount;
        var userObject$1 = {
          id: userObject_id$1,
          userAddress: userObject_userAddress$1,
          numberOfTimesPlayed: 1,
          totalContributed: userObject_totalContributed$1
        };
        Curry._1(context.user.insert, userObject$1);
        return Curry._1(context.ploffengame.insert, {
                    id: ploffenMaster.id,
                    gameToken: ploffenMaster.gameToken,
                    seedAmount: ploffenMaster.seedAmount,
                    gameStartTime: ploffenMaster.gameStartTime,
                    possibleGameWinTime: $$event.blockTimestamp + 3600 | 0,
                    possibleWinner: userObject_id$1,
                    winner: ploffenMaster.winner,
                    status: ploffenMaster.status,
                    totalPot: Ethers.$$BigInt.add(ploffenMaster.totalPot, $$event.params.amount),
                    users: $$Array.append(Belt_Option.getWithDefault(ploffenMaster.users, []), [userObject_id$1])
                  });
      }
      console.log("trying to play a ploffen game that doens't exist");
    });

Handlers.PloffenContract.registerWinPloffenLoadEntities(function ($$event, context) {
      Curry._1(context.ploffengame.startedPloffenLoad, "MASTER_GAME");
      Curry._1(context.user.userLoad, $$event.srcAddress);
    });

Handlers.PloffenContract.registerWinPloffenHandler(function ($$event, context) {
      var ploffenMaster = Curry._1(context.ploffengame.startedPloffen, undefined);
      if (ploffenMaster !== undefined) {
        return Curry._1(context.ploffengame.insert, {
                    id: ploffenMaster.id,
                    gameToken: ploffenMaster.gameToken,
                    seedAmount: ploffenMaster.seedAmount,
                    gameStartTime: ploffenMaster.gameStartTime,
                    possibleGameWinTime: ploffenMaster.possibleGameWinTime,
                    possibleWinner: ploffenMaster.possibleWinner,
                    winner: Ethers.ethAddressToString($$event.params.winner),
                    status: "Ended",
                    totalPot: ploffenMaster.totalPot,
                    users: ploffenMaster.users
                  });
      } else {
        console.log("Trying to win a non-existing ploffen game");
        return ;
      }
    });

/*  Not a pure module */
