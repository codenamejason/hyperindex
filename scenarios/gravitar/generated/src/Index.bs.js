// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Context = require("./Context.bs.js");
var Handlers = require("./Handlers.bs.js");
var Caml_array = require("rescript/lib/js/caml_array.js");

function generateCombinedFilter(param) {
  
}

async function eventRouter($$event) {
  if ($$event.TAG === /* NewGravatar */0) {
    var newGravatarContext = await Context.loadNewGravatarContext(undefined);
    Handlers.gravatarNewGravatarEventHandler($$event._0, newGravatarContext);
    return await Context.saveNewGravatarContext(undefined);
  }
  var updateGravatarContext = await Context.loadUpdateGravatarContext(undefined);
  Handlers.gravatarUpdateGravatarEventHandler($$event._0, updateGravatarContext);
  return await Context.saveUpdateGravatarContext(undefined);
}

async function processEventBatch(eventBatch) {
  for(var i = 0 ,i_finish = eventBatch.length; i < i_finish; ++i){
    await eventRouter(Caml_array.get(eventBatch, i));
  }
}

function startIndexer(param) {
  
}

exports.generateCombinedFilter = generateCombinedFilter;
exports.eventRouter = eventRouter;
exports.processEventBatch = processEventBatch;
exports.startIndexer = startIndexer;
/* Handlers Not a pure module */
