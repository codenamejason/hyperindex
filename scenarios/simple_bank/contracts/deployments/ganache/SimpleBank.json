{
  "address": "0xD2547e4AA4f5a2b0a512BFd45C9E3360FeEa48Df",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasuryAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "AccountCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DepositMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalBalance",
          "type": "uint256"
        }
      ],
      "name": "TotalBalanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawalMade",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "createAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xfbe8cb5b1cf41e642bdb917427afdbb36db722d2b33344ceb1088d8d76c70766",
  "receipt": {
    "to": null,
    "from": "0x72e37d393c70823113a7176aC1F7C579d2C5623E",
    "contractAddress": "0xD2547e4AA4f5a2b0a512BFd45C9E3360FeEa48Df",
    "transactionIndex": 0,
    "gasUsed": "836025",
    "logsBloom": "0x
    "blockHash": "0xde03e402dca303bdb986e7aff6dc87acc7a3bd1b146f50085d4881a78b24967f",
    "transactionHash": "0xfbe8cb5b1cf41e642bdb917427afdbb36db722d2b33344ceb1088d8d76c70766",
    "logs": [],
    "blockNumber": 3,
    "cumulativeGasUsed": "836025",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x72e37d393c70823113a7176aC1F7C579d2C5623E"
  ],
  "numDeployments": 1,
  "solcInputHash": "aa39762ad148e552e8ee3d804bb99ab9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasuryAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"AccountCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBalance\",\"type\":\"uint256\"}],\"name\":\"TotalBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalMade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"createAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleBank.sol\":\"SimpleBank\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SimpleBank.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// SimpleBank contract\\ncontract SimpleBank {\\n    mapping(address => uint256) private balances;\\n    uint256 private totalBalance;\\n    address private treasuryAddress;\\n    uint256 private lastInterestCalculationTime;\\n\\n    event AccountCreated(address indexed userAddress);\\n    event DepositMade(address indexed userAddress, uint256 amount);\\n    event WithdrawalMade(address indexed userAddress, uint256 amount);\\n    event TotalBalanceChanged(uint256 totalBalance);\\n\\n    constructor(address _treasuryAddress) {\\n        treasuryAddress = _treasuryAddress;\\n    }\\n\\n    // Create a new account\\n    function createAccount(address userAddress) external {\\n        require(balances[userAddress] == 0, \\\"Account already exists\\\");\\n\\n        // Update balance and total balance\\n        balances[userAddress] = 0;\\n        totalBalance += 0;\\n\\n        // Emit event\\n        emit AccountCreated(userAddress);\\n\\n        // Update total balance event\\n        emit TotalBalanceChanged(totalBalance);\\n    }\\n\\n    // Deposit funds into the account\\n    function deposit(address userAddress, uint256 depositAmount) external payable {\\n        require(depositAmount > 0, \\\"Deposit amount should be greater than 0\\\");\\n\\n        // Calculate interest since last interest calculation time\\n        uint256 interest = _calculateInterest(userAddress);\\n\\n        // Update balance and total balance\\n        balances[userAddress] += depositAmount + interest;\\n        totalBalance += depositAmount + interest;\\n\\n        // Emit event\\n        emit DepositMade(userAddress, depositAmount);\\n\\n        // Update last interest calculation time\\n        lastInterestCalculationTime = block.timestamp;\\n\\n        // Update total balance event\\n        emit TotalBalanceChanged(totalBalance);\\n    }\\n\\n    // Withdraw funds from the account\\n    function withdraw(address userAddress, uint256 _amount) external {\\n        require(_amount > 0, \\\"Withdrawal amount should be greater than 0\\\");\\n        require(_amount <= balances[userAddress], \\\"Insufficient balance\\\");\\n\\n        // Calculate interest since last interest calculation time\\n        uint256 interest = _calculateInterest(userAddress);\\n\\n        // Update balance and total balance\\n        balances[userAddress] -= _amount;\\n        totalBalance -= _amount;\\n\\n        // Emit event\\n        emit WithdrawalMade(userAddress, _amount);\\n\\n        // Update last interest calculation time\\n        lastInterestCalculationTime = block.timestamp;\\n\\n        // Update total balance event\\n        emit TotalBalanceChanged(totalBalance);\\n\\n        // Transfer funds to the user's account\\n        (bool success, ) = userAddress.call{value: _amount + interest}(\\\"\\\");\\n        require(success, \\\"Transfer failed\\\");\\n    }\\n\\n    // Calculate interest earned by the user since the last calculation time\\n    function _calculateInterest(address userAddress) private returns (uint256) {\\n        Treasury treasuryContract = Treasury(treasuryAddress);\\n        uint256 interest = treasuryContract.calculateInterest();\\n\\n        // Calculate interest earned by the user and update their balance\\n        uint256 accountInterest = (interest * balances[userAddress]) / totalBalance;\\n        balances[msg.sender] += accountInterest;\\n\\n        // Emit event for interest calculation\\n        // emit Treasury.InterestCalculated(interest);\\n\\n        return accountInterest;\\n    }\\n\\n    // Get the balance of the user\\n    function getBalance(address userAddress) external view returns (uint256) {\\n        return balances[userAddress];\\n    }\\n\\n    // Get the total balance of the bank\\n    function getTotalBalance() external view returns (uint256) {\\n        return totalBalance;\\n    }\\n}\\n\\ncontract Treasury {\\n    uint256 private totalBalance;\\n    uint256 private lastInterestCalculationTime;\\n    uint256 private interestRate;\\n\\n    event InterestCalculated(uint256 interest);\\n\\n    constructor(uint256 _interestRate) {\\n        interestRate = _interestRate;\\n    }\\n\\n    // Calculate interest earned since the last calculation time\\n    function calculateInterest() external returns (uint256) {\\n        uint256 timeElapsed = block.timestamp - lastInterestCalculationTime;\\n        uint256 interest = (totalBalance * interestRate * timeElapsed) / (365 * 24 * 60 * 60);\\n\\n        // Update last interest calculation time and total balance\\n        lastInterestCalculationTime = block.timestamp;\\n        totalBalance += interest;\\n\\n        // Emit event for interest calculation\\n        emit InterestCalculated(interest);\\n\\n        return interest;\\n    }\\n\\n    // Get the current interest rate\\n    function getInterestRate() external view returns (uint256) {\\n        return interestRate;\\n    }\\n\\n    // Set the interest rate\\n    function setInterestRate(uint256 _interestRate) external {\\n        interestRate = _interestRate;\\n    }\\n\\n    // Get the total balance in the treasury\\n    function getTotalBalance() external view returns (uint256) {\\n        return totalBalance;\\n    }\\n}\\n\\n\",\"keccak256\":\"0xc2b4746241ba1fa470f6fd658c9355e57a8e233c51f696745177ca3b1c6f8497\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610ed6380380610ed6833981810160405281019061003291906100dc565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a98261007e565b9050919050565b6100b98161009e565b81146100c457600080fd5b50565b6000815190506100d6816100b0565b92915050565b6000602082840312156100f2576100f1610079565b5b6000610100848285016100c7565b91505092915050565b610dbe806101186000396000f3fe60806040526004361061004a5760003560e01c806312b583491461004f57806347e7ef241461007a5780639859387b14610096578063f3fef3a3146100bf578063f8b2cb4f146100e8575b600080fd5b34801561005b57600080fd5b50610064610125565b6040516100719190610837565b60405180910390f35b610094600480360381019061008f91906108e1565b61012f565b005b3480156100a257600080fd5b506100bd60048036038101906100b89190610921565b610296565b005b3480156100cb57600080fd5b506100e660048036038101906100e191906108e1565b6103f4565b005b3480156100f457600080fd5b5061010f600480360381019061010a9190610921565b61067e565b60405161011c9190610837565b60405180910390f35b6000600154905090565b60008111610172576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610169906109d1565b60405180910390fd5b600061017d836106c6565b9050808261018b9190610a20565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101d89190610a20565b9250508190555080826101eb9190610a20565b600160008282546101fc9190610a20565b925050819055508273ffffffffffffffffffffffffffffffffffffffff167fd15c9547ea5c06670c0010ce19bc32d54682a4b3801ece7f3ab0c3f17106b4bb836040516102499190610837565b60405180910390a2426003819055507f3ef0a461e69a46a1c2286862cd271536d024c707fc668065620f81f8d778d8e66001546040516102899190610837565b60405180910390a1505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030e90610aa0565b60405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006001600082825461036e9190610a20565b925050819055508073ffffffffffffffffffffffffffffffffffffffff167f805996f252884581e2f74cf3d2b03564d5ec26ccc90850ae12653dc1b72d1fa260405160405180910390a27f3ef0a461e69a46a1c2286862cd271536d024c707fc668065620f81f8d778d8e66001546040516103e99190610837565b60405180910390a150565b60008111610437576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042e90610b32565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111156104b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104af90610b9e565b60405180910390fd5b60006104c3836106c6565b9050816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105139190610bbe565b92505081905550816001600082825461052c9190610bbe565b925050819055508273ffffffffffffffffffffffffffffffffffffffff167fbc158bb64f05d6383aea69bbb0b20c1bbf4b7a18f63359c5649b7c39e29d3884836040516105799190610837565b60405180910390a2426003819055507f3ef0a461e69a46a1c2286862cd271536d024c707fc668065620f81f8d778d8e66001546040516105b99190610837565b60405180910390a160008373ffffffffffffffffffffffffffffffffffffffff1682846105e69190610a20565b6040516105f290610c23565b60006040518083038185875af1925050503d806000811461062f576040519150601f19603f3d011682016040523d82523d6000602084013e610634565b606091505b5050905080610678576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066f90610c84565b60405180910390fd5b50505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663eb0c49556040518163ffffffff1660e01b81526004016020604051808303816000875af115801561073d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107619190610cb9565b905060006001546000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836107b29190610ce6565b6107bc9190610d57565b9050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461080c9190610a20565b92505081905550809350505050919050565b6000819050919050565b6108318161081e565b82525050565b600060208201905061084c6000830184610828565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061088282610857565b9050919050565b61089281610877565b811461089d57600080fd5b50565b6000813590506108af81610889565b92915050565b6108be8161081e565b81146108c957600080fd5b50565b6000813590506108db816108b5565b92915050565b600080604083850312156108f8576108f7610852565b5b6000610906858286016108a0565b9250506020610917858286016108cc565b9150509250929050565b60006020828403121561093757610936610852565b5b6000610945848285016108a0565b91505092915050565b600082825260208201905092915050565b7f4465706f73697420616d6f756e742073686f756c64206265206772656174657260008201527f207468616e203000000000000000000000000000000000000000000000000000602082015250565b60006109bb60278361094e565b91506109c68261095f565b604082019050919050565b600060208201905081810360008301526109ea816109ae565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a2b8261081e565b9150610a368361081e565b9250828201905080821115610a4e57610a4d6109f1565b5b92915050565b7f4163636f756e7420616c72656164792065786973747300000000000000000000600082015250565b6000610a8a60168361094e565b9150610a9582610a54565b602082019050919050565b60006020820190508181036000830152610ab981610a7d565b9050919050565b7f5769746864726177616c20616d6f756e742073686f756c64206265206772656160008201527f746572207468616e203000000000000000000000000000000000000000000000602082015250565b6000610b1c602a8361094e565b9150610b2782610ac0565b604082019050919050565b60006020820190508181036000830152610b4b81610b0f565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000610b8860148361094e565b9150610b9382610b52565b602082019050919050565b60006020820190508181036000830152610bb781610b7b565b9050919050565b6000610bc98261081e565b9150610bd48361081e565b9250828203905081811115610bec57610beb6109f1565b5b92915050565b600081905092915050565b50565b6000610c0d600083610bf2565b9150610c1882610bfd565b600082019050919050565b6000610c2e82610c00565b9150819050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610c6e600f8361094e565b9150610c7982610c38565b602082019050919050565b60006020820190508181036000830152610c9d81610c61565b9050919050565b600081519050610cb3816108b5565b92915050565b600060208284031215610ccf57610cce610852565b5b6000610cdd84828501610ca4565b91505092915050565b6000610cf18261081e565b9150610cfc8361081e565b9250828202610d0a8161081e565b91508282048414831517610d2157610d206109f1565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d628261081e565b9150610d6d8361081e565b925082610d7d57610d7c610d28565b5b82820490509291505056fea2646970667358221220bbf5a7d102d6e11e0a5d56ed3d8c7d3f7e061a54e7315ce5cd551e446a136da564736f6c63430008130033",
  "deployedBytecode": "0x60806040526004361061004a5760003560e01c806312b583491461004f57806347e7ef241461007a5780639859387b14610096578063f3fef3a3146100bf578063f8b2cb4f146100e8575b600080fd5b34801561005b57600080fd5b50610064610125565b6040516100719190610837565b60405180910390f35b610094600480360381019061008f91906108e1565b61012f565b005b3480156100a257600080fd5b506100bd60048036038101906100b89190610921565b610296565b005b3480156100cb57600080fd5b506100e660048036038101906100e191906108e1565b6103f4565b005b3480156100f457600080fd5b5061010f600480360381019061010a9190610921565b61067e565b60405161011c9190610837565b60405180910390f35b6000600154905090565b60008111610172576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610169906109d1565b60405180910390fd5b600061017d836106c6565b9050808261018b9190610a20565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101d89190610a20565b9250508190555080826101eb9190610a20565b600160008282546101fc9190610a20565b925050819055508273ffffffffffffffffffffffffffffffffffffffff167fd15c9547ea5c06670c0010ce19bc32d54682a4b3801ece7f3ab0c3f17106b4bb836040516102499190610837565b60405180910390a2426003819055507f3ef0a461e69a46a1c2286862cd271536d024c707fc668065620f81f8d778d8e66001546040516102899190610837565b60405180910390a1505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030e90610aa0565b60405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006001600082825461036e9190610a20565b925050819055508073ffffffffffffffffffffffffffffffffffffffff167f805996f252884581e2f74cf3d2b03564d5ec26ccc90850ae12653dc1b72d1fa260405160405180910390a27f3ef0a461e69a46a1c2286862cd271536d024c707fc668065620f81f8d778d8e66001546040516103e99190610837565b60405180910390a150565b60008111610437576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042e90610b32565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111156104b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104af90610b9e565b60405180910390fd5b60006104c3836106c6565b9050816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105139190610bbe565b92505081905550816001600082825461052c9190610bbe565b925050819055508273ffffffffffffffffffffffffffffffffffffffff167fbc158bb64f05d6383aea69bbb0b20c1bbf4b7a18f63359c5649b7c39e29d3884836040516105799190610837565b60405180910390a2426003819055507f3ef0a461e69a46a1c2286862cd271536d024c707fc668065620f81f8d778d8e66001546040516105b99190610837565b60405180910390a160008373ffffffffffffffffffffffffffffffffffffffff1682846105e69190610a20565b6040516105f290610c23565b60006040518083038185875af1925050503d806000811461062f576040519150601f19603f3d011682016040523d82523d6000602084013e610634565b606091505b5050905080610678576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066f90610c84565b60405180910390fd5b50505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663eb0c49556040518163ffffffff1660e01b81526004016020604051808303816000875af115801561073d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107619190610cb9565b905060006001546000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836107b29190610ce6565b6107bc9190610d57565b9050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461080c9190610a20565b92505081905550809350505050919050565b6000819050919050565b6108318161081e565b82525050565b600060208201905061084c6000830184610828565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061088282610857565b9050919050565b61089281610877565b811461089d57600080fd5b50565b6000813590506108af81610889565b92915050565b6108be8161081e565b81146108c957600080fd5b50565b6000813590506108db816108b5565b92915050565b600080604083850312156108f8576108f7610852565b5b6000610906858286016108a0565b9250506020610917858286016108cc565b9150509250929050565b60006020828403121561093757610936610852565b5b6000610945848285016108a0565b91505092915050565b600082825260208201905092915050565b7f4465706f73697420616d6f756e742073686f756c64206265206772656174657260008201527f207468616e203000000000000000000000000000000000000000000000000000602082015250565b60006109bb60278361094e565b91506109c68261095f565b604082019050919050565b600060208201905081810360008301526109ea816109ae565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a2b8261081e565b9150610a368361081e565b9250828201905080821115610a4e57610a4d6109f1565b5b92915050565b7f4163636f756e7420616c72656164792065786973747300000000000000000000600082015250565b6000610a8a60168361094e565b9150610a9582610a54565b602082019050919050565b60006020820190508181036000830152610ab981610a7d565b9050919050565b7f5769746864726177616c20616d6f756e742073686f756c64206265206772656160008201527f746572207468616e203000000000000000000000000000000000000000000000602082015250565b6000610b1c602a8361094e565b9150610b2782610ac0565b604082019050919050565b60006020820190508181036000830152610b4b81610b0f565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000610b8860148361094e565b9150610b9382610b52565b602082019050919050565b60006020820190508181036000830152610bb781610b7b565b9050919050565b6000610bc98261081e565b9150610bd48361081e565b9250828203905081811115610bec57610beb6109f1565b5b92915050565b600081905092915050565b50565b6000610c0d600083610bf2565b9150610c1882610bfd565b600082019050919050565b6000610c2e82610c00565b9150819050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610c6e600f8361094e565b9150610c7982610c38565b602082019050919050565b60006020820190508181036000830152610c9d81610c61565b9050919050565b600081519050610cb3816108b5565b92915050565b600060208284031215610ccf57610cce610852565b5b6000610cdd84828501610ca4565b91505092915050565b6000610cf18261081e565b9150610cfc8361081e565b9250828202610d0a8161081e565b91508282048414831517610d2157610d206109f1565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d628261081e565b9150610d6d8361081e565b925082610d7d57610d7c610d28565b5b82820490509291505056fea2646970667358221220bbf5a7d102d6e11e0a5d56ed3d8c7d3f7e061a54e7315ce5cd551e446a136da564736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5,
        "contract": "contracts/SimpleBank.sol:SimpleBank",
        "label": "balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 7,
        "contract": "contracts/SimpleBank.sol:SimpleBank",
        "label": "totalBalance",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 9,
        "contract": "contracts/SimpleBank.sol:SimpleBank",
        "label": "treasuryAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 11,
        "contract": "contracts/SimpleBank.sol:SimpleBank",
        "label": "lastInterestCalculationTime",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}