// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Abis = require("generated/src/Abis.bs.js");
var Jest = require("@glennsl/rescript-jest/src/jest.bs.js");
var Ethers = require("generated/src/bindings/Ethers.bs.js");
var Ethers$1 = require("ethers");
var Hardhat = require("hardhat");
var EventSyncing = require("generated/src/EventSyncing.bs.js");
var SetupRpcNode = require("./helpers/SetupRpcNode.bs.js");
var LiveGravatarTask = require("./helpers/LiveGravatarTask.bs.js");
var EventSubscription = require("generated/src/EventSubscription.bs.js");

Jest.describe("E2E Mock Event Batch", (function (param) {
        Jest.beforeAllPromise(60000, (function (param) {
                return SetupRpcNode.setupNodeAndContracts(undefined);
              }));
        Jest.testPromise("Complete E2E", undefined, (async function (param) {
                var localChainConfig_provider = Hardhat.ethers.provider;
                var localChainConfig_contracts = [{
                    name: "GravatarRegistry",
                    abi: Ethers.makeAbi(Abis.gravatarAbi),
                    address: Ethers$1.ethers.getAddress("0x5FbDB2315678afecb367f032d93F642f64180aa3"),
                    events: [
                      /* GravatarContract_NewGravatarEvent */0,
                      /* GravatarContract_UpdatedGravatarEvent */1
                    ]
                  }];
                var localChainConfig = {
                  provider: localChainConfig_provider,
                  startBlock: 0,
                  chainId: 1337,
                  contracts: localChainConfig_contracts
                };
                await EventSyncing.processAllEvents(localChainConfig);
                await LiveGravatarTask.liveGravatarTxs(undefined);
                await EventSubscription.startWatchingEventsOnRpc(localChainConfig, localChainConfig_provider);
                return Jest.pass;
              }));
      }));

/*  Not a pure module */
