"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Greeter__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "string",
                name: "_greeting",
                type: "string",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "GreeterError",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "user",
                type: "address",
            },
        ],
        name: "ClearGreeting",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                indexed: false,
                internalType: "string",
                name: "greeting",
                type: "string",
            },
        ],
        name: "NewGreeting",
        type: "event",
    },
    {
        inputs: [],
        name: "clearGreeting",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "greet",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "greeting",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "_greeting",
                type: "string",
            },
        ],
        name: "setGreeting",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "throwError",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x60806040523480156200001157600080fd5b5060405162000c4c38038062000c4c833981016040819052620000349162000163565b6200006460405180606001604052806022815260200162000c2a6022913982620000b560201b620003271760201c565b6000620000728282620002aa565b507fcbc299eeb7a1a982d3674880645107c4fe48c3227163794e48540a75227223543382604051620000a6929190620003a4565b60405180910390a15062000404565b620001028282604051602401620000ce929190620003d2565b60408051601f198184030181529190526020810180516001600160e01b03908116634b5c427760e01b179091526200010616565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200015a57818101518382015260200162000140565b50506000910152565b6000602082840312156200017657600080fd5b81516001600160401b03808211156200018e57600080fd5b818401915084601f830112620001a357600080fd5b815181811115620001b857620001b862000127565b604051601f8201601f19908116603f01168101908382118183101715620001e357620001e362000127565b81604052828152876020848701011115620001fd57600080fd5b620002108360208301602088016200013d565b979650505050505050565b600181811c908216806200023057607f821691505b6020821081036200025157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002a557600081815260208120601f850160051c81016020861015620002805750805b601f850160051c820191505b81811015620002a1578281556001016200028c565b5050505b505050565b81516001600160401b03811115620002c657620002c662000127565b620002de81620002d784546200021b565b8462000257565b602080601f831160018114620003165760008415620002fd5750858301515b600019600386901b1c1916600185901b178555620002a1565b600085815260208120601f198616915b82811015620003475788860151825594840194600190910190840162000326565b5085821015620003665787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008151808452620003908160208601602086016200013d565b601f01601f19169290920160200192915050565b6001600160a01b0383168152604060208201819052600090620003ca9083018462000376565b949350505050565b604081526000620003e7604083018562000376565b8281036020840152620003fb818562000376565b95945050505050565b61081680620004146000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063a413686211610050578063a41368621461007e578063cfae321714610091578063ef690cc0146100af57600080fd5b80632f7643a81461006c57806332f9b63f14610076575b600080fd5b6100746100b7565b005b6100746100d0565b61007461008c366004610473565b610110565b610099610207565b6040516100a6919061056a565b60405180910390f35b610099610299565b60405163c8508fc360e01b815260040160405180910390fd5b6100db600080610407565b6040513381527fe1e180b6e25ff275b0367c82e362c09bda277674444b5549ebbd00406583882d9060200160405180910390a1565b6101bd6040518060600160405280602381526020016107e7602391396000805461013990610584565b80601f016020809104026020016040519081016040528092919081815260200182805461016590610584565b80156101b25780601f10610187576101008083540402835291602001916101b2565b820191906000526020600020905b81548152906001019060200180831161019557829003601f168201915b505050505083610385565b60006101c9828261060c565b507fcbc299eeb7a1a982d3674880645107c4fe48c3227163794e48540a75227223543360006040516101fc9291906106cc565b60405180910390a150565b60606000805461021690610584565b80601f016020809104026020016040519081016040528092919081815260200182805461024290610584565b801561028f5780601f106102645761010080835404028352916020019161028f565b820191906000526020600020905b81548152906001019060200180831161027257829003601f168201915b5050505050905090565b600080546102a690610584565b80601f01602080910402602001604051908101604052809291908181526020018280546102d290610584565b801561031f5780601f106102f45761010080835404028352916020019161031f565b820191906000526020600020905b81548152906001019060200180831161030257829003601f168201915b505050505081565b610381828260405160240161033d929190610775565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16634b5c427760e01b1790526103e6565b5050565b6103e183838360405160240161039d939291906107a3565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16632ced7cef60e01b1790526103e6565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b50805461041390610584565b6000825580601f10610423575050565b601f0160209004906000526020600020908101906104419190610444565b50565b5b808211156104595760008155600101610445565b5090565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561048557600080fd5b813567ffffffffffffffff8082111561049d57600080fd5b818401915084601f8301126104b157600080fd5b8135818111156104c3576104c361045d565b604051601f8201601f19908116603f011681019083821181831017156104eb576104eb61045d565b8160405282815287602084870101111561050457600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b8181101561054a5760208185018101518683018201520161052e565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061057d6020830184610524565b9392505050565b600181811c9082168061059857607f821691505b6020821081036105b857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156103e157600081815260208120601f850160051c810160208610156105e55750805b601f850160051c820191505b81811015610604578281556001016105f1565b505050505050565b815167ffffffffffffffff8111156106265761062661045d565b61063a816106348454610584565b846105be565b602080601f83116001811461066f57600084156106575750858301515b600019600386901b1c1916600185901b178555610604565b600085815260208120601f198616915b8281101561069e5788860151825594840194600190910190840161067f565b50858210156106bc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b73ffffffffffffffffffffffffffffffffffffffff8316815260006020604081840152600084546106fc81610584565b806040870152606060018084166000811461071e576001811461073857610766565b60ff1985168984015283151560051b890183019550610766565b896000528660002060005b8581101561075e5781548b8201860152908301908801610743565b8a0184019650505b50939998505050505050505050565b6040815260006107886040830185610524565b828103602084015261079a8185610524565b95945050505050565b6060815260006107b66060830186610524565b82810360208401526107c88186610524565b905082810360408401526107dc8185610524565b969550505050505056fe4368616e67696e67206772656574696e672066726f6d202725732720746f2027257327a164736f6c6343000811000a4465706c6f79696e67206120477265657465722077697468206772656574696e673a";
const isSuperArgs = (xs) => xs.length > 1;
class Greeter__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_greeting, overrides) {
        return super.deploy(_greeting, overrides || {});
    }
    getDeployTransaction(_greeting, overrides) {
        return super.getDeployTransaction(_greeting, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
Greeter__factory.bytecode = _bytecode;
Greeter__factory.abi = _abi;
exports.Greeter__factory = Greeter__factory;
