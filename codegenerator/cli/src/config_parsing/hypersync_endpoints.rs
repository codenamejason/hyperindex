use anyhow::anyhow;

pub enum SupportedNetwork {
    EthereumMainnet,
    EthereumGoerliTestnet,
    EthereumSepoliaTestnet,
    Polygon,
    PolygonMumbaiTestnet,
    ArbitrumOne,
    ArbitrumNova,
    ArbitrumGoerli,
    BaseGoerli,
    BinanceChain,
    BinanceChainTestnet,
    AvalancheCChain,
    Fantom,
    Optimism,
    Moonbeam,
    Moonriver,
    Moonbase,
    Astar,
    ScrollAlphaTestnet,
    ZkSync,
    ZkSyncTestnet,
    SKALECalypso,
    SKALECalypsoStaging,
    SKALENebula,
    SKALENebulaStaging,
    BOBAEthereum,
    BOBAMoonbeam,
    MantleTestnet,
    Exosama,
}

pub fn chain_id_to_network(chain_id: i32) -> anyhow::Result<SupportedNetwork> {
    match chain_id {
        1 => Ok(SupportedNetwork::EthereumMainnet),
        5 => Ok(SupportedNetwork::EthereumGoerliTestnet),
        11155111 => Ok(SupportedNetwork::EthereumSepoliaTestnet),
        137 => Ok(SupportedNetwork::Polygon),
        80001 => Ok(SupportedNetwork::PolygonMumbaiTestnet),
        42161 => Ok(SupportedNetwork::ArbitrumOne),
        42170 => Ok(SupportedNetwork::ArbitrumNova),
        421613 => Ok(SupportedNetwork::ArbitrumGoerli),
        8453 => Ok(SupportedNetwork::BaseGoerli),
        56 => Ok(SupportedNetwork::BinanceChain),
        97 => Ok(SupportedNetwork::BinanceChainTestnet),
        43114 => Ok(SupportedNetwork::AvalancheCChain),
        250 => Ok(SupportedNetwork::Fantom),
        10 => Ok(SupportedNetwork::Optimism),
        1284 => Ok(SupportedNetwork::Moonbeam),
        1285 => Ok(SupportedNetwork::Moonriver),
        1287 => Ok(SupportedNetwork::Moonbase),
        592 => Ok(SupportedNetwork::Astar),
        534353 => Ok(SupportedNetwork::ScrollAlphaTestnet),
        324 => Ok(SupportedNetwork::ZkSync),
        280 => Ok(SupportedNetwork::ZkSyncTestnet),
        1564830818 => Ok(SupportedNetwork::SKALECalypso),
        344106930 => Ok(SupportedNetwork::SKALECalypsoStaging),
        1482601649 => Ok(SupportedNetwork::SKALENebula),
        503129905 => Ok(SupportedNetwork::SKALENebulaStaging),
        288 => Ok(SupportedNetwork::BOBAEthereum),
        1294 => Ok(SupportedNetwork::BOBAMoonbeam),
        5001 => Ok(SupportedNetwork::MantleTestnet),
        2109 => Ok(SupportedNetwork::Exosama),
        id => Err(anyhow!("Chain Id {id} is not supported by our servers")),
    }
}

fn network_to_chain_id(network: SupportedNetwork) -> i32 {
    match network {
        SupportedNetwork::EthereumMainnet => 1,
        SupportedNetwork::EthereumGoerliTestnet => 5,
        SupportedNetwork::EthereumSepoliaTestnet => 11155111,
        SupportedNetwork::Polygon => 137,
        SupportedNetwork::PolygonMumbaiTestnet => 80001,
        SupportedNetwork::ArbitrumOne => 42161,
        SupportedNetwork::ArbitrumNova => 42170,
        SupportedNetwork::ArbitrumGoerli => 421613,
        SupportedNetwork::BaseGoerli => 8453,
        SupportedNetwork::BinanceChain => 56,
        SupportedNetwork::BinanceChainTestnet => 97,
        SupportedNetwork::AvalancheCChain => 43114,
        SupportedNetwork::Fantom => 250,
        SupportedNetwork::Optimism => 10,
        SupportedNetwork::Moonbeam => 1284,
        SupportedNetwork::Moonriver => 1285,
        SupportedNetwork::Moonbase => 1287,
        SupportedNetwork::Astar => 592,
        SupportedNetwork::ScrollAlphaTestnet => 534353,
        SupportedNetwork::ZkSync => 324,
        SupportedNetwork::ZkSyncTestnet => 280,
        SupportedNetwork::SKALECalypso => 1564830818,
        SupportedNetwork::SKALECalypsoStaging => 344106930,
        SupportedNetwork::SKALENebula => 1482601649,
        SupportedNetwork::SKALENebulaStaging => 503129905,
        SupportedNetwork::BOBAEthereum => 288,
        SupportedNetwork::BOBAMoonbeam => 1294,
        SupportedNetwork::MantleTestnet => 5001,
        SupportedNetwork::Exosama => 2109,
    }
}

pub fn network_to_eth_archive_url(network: &SupportedNetwork) -> String {
    match network {
        SupportedNetwork::EthereumMainnet => "https://eth.archive.subsquid.io",
        SupportedNetwork::EthereumGoerliTestnet => "https://goerli.archive.subsquid.io",
        SupportedNetwork::EthereumSepoliaTestnet => "https://sepolia.archive.subsquid.io",
        SupportedNetwork::Polygon => "https://polygon.archive.subsquid.io",
        SupportedNetwork::PolygonMumbaiTestnet => "https://polygon-mumbai.archive.subsquid.io",
        SupportedNetwork::ArbitrumOne => "https://arbitrum.archive.subsquid.io",
        SupportedNetwork::ArbitrumNova => "https://arbitrum-nova.archive.subsquid.io",
        SupportedNetwork::ArbitrumGoerli => "https://arbitrum-goerli.archive.subsquid.io",
        SupportedNetwork::BaseGoerli => "https://base-goerli.archive.subsquid.io",
        SupportedNetwork::BinanceChain => "https://binance.archive.subsquid.io",
        SupportedNetwork::BinanceChainTestnet => "https://binance-testnet.archive.subsquid.io",
        SupportedNetwork::AvalancheCChain => "https://avalanche-c.archive.subsquid.io",
        SupportedNetwork::Fantom => "https://fantom.archive.subsquid.io",
        SupportedNetwork::Optimism => "https://optimism-mainnet.archive.subsquid.io",
        SupportedNetwork::Moonbeam => "https://moonbeam-evm.archive.subsquid.io",
        SupportedNetwork::Moonriver => "https://moonriver-evm.archive.subsquid.io",
        SupportedNetwork::Moonbase => "https://moonbase-evm.archive.subsquid.io",
        SupportedNetwork::Astar => "https://astar-evm.archive.subsquid.io",
        SupportedNetwork::ScrollAlphaTestnet => "https://scroll-alpha-testnet.archive.subsquid.io",
        SupportedNetwork::ZkSync => "https://zksync.archive.subsquid.io",
        SupportedNetwork::ZkSyncTestnet => "https://zksync-testnet.archive.subsquid.io",
        SupportedNetwork::SKALECalypso => "https://skale-calypso.archive.subsquid.io",
        SupportedNetwork::SKALECalypsoStaging => {
            "https://skale-calypso-staging.archive.subsquid.io"
        }
        SupportedNetwork::SKALENebula => "https://skale-nebula.archive.subsquid.io",
        SupportedNetwork::SKALENebulaStaging => "https://skale-nebula-staging.archive.subsquid.io",
        SupportedNetwork::BOBAEthereum => "https://boba-eth.archive.subsquid.io",
        SupportedNetwork::BOBAMoonbeam => "https://boba-moonbeam.archive.subsquid.io",
        SupportedNetwork::MantleTestnet => "https://mantle-testnet.archive.subsquid.io",
        SupportedNetwork::Exosama => "https://exosama.archive.subsquid.io",
    }
    .to_string()
}

pub fn network_to_skar_url(network: &SupportedNetwork) -> Option<String> {
    match network {
        SupportedNetwork::EthereumMainnet => Some("http://91.216.245.118:1151".to_string()),
        // SupportedNetwork::Polygon => Some("http://91.216.245.118:2151".to_string()),
        _network => None

        // SupportedNetwork::EthereumGoerliTestnet => "https://goerli.archive.subsquid.io",
        // SupportedNetwork::EthereumSepoliaTestnet => "https://sepolia.archive.subsquid.io",
        // SupportedNetwork::PolygonMumbaiTestnet => "https://polygon-mumbai.archive.subsquid.io",
        // SupportedNetwork::ArbitrumOne => "https://arbitrum.archive.subsquid.io",
        // SupportedNetwork::ArbitrumNova => "https://arbitrum-nova.archive.subsquid.io",
        // SupportedNetwork::ArbitrumGoerli => "https://arbitrum-goerli.archive.subsquid.io",
        // SupportedNetwork::BaseGoerli => "https://base-goerli.archive.subsquid.io",
        // SupportedNetwork::BinanceChain => "https://binance.archive.subsquid.io",
        // SupportedNetwork::BinanceChainTestnet => "https://binance-testnet.archive.subsquid.io",
        // SupportedNetwork::AvalancheCChain => "https://avalanche-c.archive.subsquid.io",
        // SupportedNetwork::Fantom => "https://fantom.archive.subsquid.io",
        // SupportedNetwork::Optimism => "https://optimism-mainnet.archive.subsquid.io",
        // SupportedNetwork::Moonbeam => "https://moonbeam-evm.archive.subsquid.io",
        // SupportedNetwork::Moonriver => "https://moonriver-evm.archive.subsquid.io",
        // SupportedNetwork::Moonbase => "https://moonbase-evm.archive.subsquid.io",
        // SupportedNetwork::Astar => "https://astar-evm.archive.subsquid.io",
        // SupportedNetwork::ScrollAlphaTestnet => "https://scroll-alpha-testnet.archive.subsquid.io",
        // SupportedNetwork::ZkSync => "https://zksync.archive.subsquid.io",
        // SupportedNetwork::ZkSyncTestnet => "https://zksync-testnet.archive.subsquid.io",
        // SupportedNetwork::SKALECalypso => "https://skale-calypso.archive.subsquid.io",
        // SupportedNetwork::SKALECalypsoStaging => {
        //     "https://skale-calypso-staging.archive.subsquid.io"
        // }
        // SupportedNetwork::SKALENebula => "https://skale-nebula.archive.subsquid.io",
        // SupportedNetwork::SKALENebulaStaging => "https://skale-nebula-staging.archive.subsquid.io",
        // SupportedNetwork::BOBAEthereum => "https://boba-eth.archive.subsquid.io",
        // SupportedNetwork::BOBAMoonbeam => "https://boba-moonbeam.archive.subsquid.io",
        // SupportedNetwork::MantleTestnet => "https://mantle-testnet.archive.subsquid.io",
        // SupportedNetwork::Exosama => "https://exosama.archive.subsquid.io",
    }
}
